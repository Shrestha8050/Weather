{"version":3,"sources":["assets/svg/wi-cloudy.svg","assets/svg/wi-rain.svg","assets/svg/wi-strong-wind.svg","assets/svg/wi-humidity.svg","Widgets/Date.js","Widgets/GetSvg.js","App.js","index.js","assets/svg/wi-day-sunny.svg"],"names":["module","exports","GetDate","NewDate","Date","day","getDay","month","getMonth","date","getDate","year","getFullYear","GetSvg","type","className","icon","templete","src","Sunny","Cloudy","Rainy","Wind","Humidity","Svg","apiURL","App","useState","query","setQuery","data","setdata","weather","setWeather","wind","setwind","coordinate","setCoordinate","name","setName","placeholder","onChange","e","input","target","value","onInputChange","onKeyPress","evt","key","alert","Axios","get","then","response","coord","catch","err","JSON","stringify","sys","country","lon","lat","main","Math","round","temp","description","speed","humidity","ReactDOM","render","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,yC,kMCArCC,EAAU,WACd,IAAMC,EAAU,IAAIC,KAwBdC,EATO,CACX,SACA,SACA,UACA,YACA,WACA,SACA,YAEeF,EAAQG,UACnBC,EAxBS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAYmBJ,EAAQK,YACvBC,EAAON,EAAQO,UACfC,EAAOR,EAAQS,cACrB,MAAM,GAAN,OAAUP,EAAV,YAAiBI,EAAjB,YAAyBF,EAAzB,YAAkCI,I,2FCMrBE,EA3BA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAwBhB,OAAO,yBAAKC,UAAU,WAvBV,SAACC,GACX,IAAIC,EAAW,KACf,OAAQD,GACN,IAAK,QACHC,EAAW,kBAAC,IAAD,CAAUC,IAAKC,IAAOJ,UAAU,SAC3C,MACF,IAAK,SACHE,EAAW,kBAAC,IAAD,CAAUC,IAAKE,IAAQL,UAAU,SAC5C,MACF,IAAK,OACHE,EAAW,kBAAC,IAAD,CAAUC,IAAKG,IAAON,UAAU,SAC3C,MACF,IAAK,OACHE,EAAW,kBAAC,IAAD,CAAUC,IAAKI,IAAMP,UAAU,SAC1C,MACF,IAAK,WACHE,EAAW,kBAAC,IAAD,CAAUC,IAAKK,IAAUR,UAAU,SAC9C,MACF,QACEE,EAAW,kBAAC,IAAD,CAAUC,IAAKC,IAAOJ,UAAU,SAE/C,OAAOE,EAEwBO,CAAIV,KC1BjCW,EACC,mCADDA,EAEE,0CA+GOC,EA7GH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEQF,mBAAS,IAFjB,mBAETG,EAFS,KAEHC,EAFG,OAGcJ,mBAAS,IAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIQN,mBAAS,IAJjB,mBAITO,EAJS,KAIHC,EAJG,OAKoBR,mBAAS,IAL7B,mBAKTS,EALS,KAKGC,EALH,OAMQV,mBAAS,IANjB,mBAMTW,EANS,KAMHC,EANG,KAsChB,OACE,yBAAKxB,UAAU,UACb,8BACE,sDACA,yBAAKA,UAAU,QACb,kBAACb,EAAD,OAEF,yBAAKa,UAAU,cACb,2BACED,KAAK,OACL0B,YAAY,uBACZzB,UAAU,aACV0B,SAAU,SAACC,GAAD,OAhBE,SAACA,GACrB,IAAIC,EAAQD,EAAEE,OAAOC,MACrBhB,EAASc,GAcgBG,CAAcJ,IAC/BG,MAAOjB,EACPmB,WA5CK,SAACC,GACE,UAAZA,EAAIC,MACQ,KAAVrB,EACFsB,MAAM,0CAENC,IAAMC,IAAN,UACK3B,EADL,sBAC8BG,EAD9B,+BAC0DH,IAEvD4B,MAAK,SAACC,GACLvB,EAAQuB,EAASxB,MACjBK,EAAQmB,EAASxB,KAAKI,MACtBG,EAAciB,EAASxB,KAAKyB,OAC5BtB,EAAWqB,EAASxB,KAAKE,QAAQ,IACjCO,EAAQe,EAASxB,KAAKQ,MACtBT,EAAS,OAEV2B,OAAM,SAACC,GACNP,MAAM,oCAAD,OACiCtB,EADjC,6BAGLC,EAAS,YA2Ba,OAAzB6B,KAAKC,UAAU7B,GACd,yBAAKf,UAAU,YACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,YACZuB,EADH,IACUR,EAAK8B,IAAIC,UAGrB,yBAAK9C,UAAU,eACb,8BACE,6CADF,MACgCqB,EAAW0B,KAE3C,8BACE,4CADF,MAC+B1B,EAAW2B,MAG5C,yBAAKhD,UAAU,eACb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CAAQD,KAAMkB,EAAQgC,QAExB,yBAAKjD,UAAU,QACb,4BAAKkD,KAAKC,MAAMpC,EAAKkC,KAAKG,OAC1B,yCAEF,yBAAKpD,UAAU,WACb,gCAASiB,EAAQoC,cAEnB,yBAAKrD,UAAU,eACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CAAQD,KAAK,UAEf,wCACS,gCAASoB,EAAKmC,SAGzB,yBAAKtD,UAAU,YACb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CAAQD,KAAK,cAEf,4CACa,gCAASgB,EAAKkC,KAAKM,eAOxC,4FC3GVC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCLjD1E,EAAOC,QAAU,IAA0B,2C","file":"static/js/main.8406352c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wi-cloudy.2d0410c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/wi-rain.e13be320.svg\";","module.exports = __webpack_public_path__ + \"static/media/wi-strong-wind.b9d8d3cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/wi-humidity.ace478e8.svg\";","const GetDate = () => {\r\n  const NewDate = new Date();\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  const days = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n  const day = days[NewDate.getDay()];\r\n  const month = months[NewDate.getMonth()];\r\n  const date = NewDate.getDate();\r\n  const year = NewDate.getFullYear();\r\n  return `${day} ${date} ${month} ${year}`;\r\n};\r\n\r\nexport { GetDate };\r\n","import React from 'react';\r\nimport { ReactSVG } from 'react-svg';\r\nimport Sunny from '../assets/svg/wi-day-sunny.svg';\r\nimport Cloudy from '../assets/svg/wi-cloudy.svg';\r\nimport Rainy from '../assets/svg/wi-rain.svg';\r\nimport Wind from '../assets/svg/wi-strong-wind.svg';\r\nimport Humidity from '../assets/svg/wi-humidity.svg';\r\n\r\nconst GetSvg = ({ type }) => {\r\n  const Svg = (icon) => {\r\n    let templete = null;\r\n    switch (icon) {\r\n      case 'Sunny':\r\n        templete = <ReactSVG src={Sunny} className='icon' />;\r\n        break;\r\n      case 'Clouds':\r\n        templete = <ReactSVG src={Cloudy} className='icon' />;\r\n        break;\r\n      case 'Rain':\r\n        templete = <ReactSVG src={Rainy} className='icon' />;\r\n        break;\r\n      case 'Wind':\r\n        templete = <ReactSVG src={Wind} className='icon' />;\r\n        break;\r\n      case 'Humidity':\r\n        templete = <ReactSVG src={Humidity} className='icon' />;\r\n        break;\r\n      default:\r\n        templete = <ReactSVG src={Sunny} className='icon' />;\r\n    }\r\n    return templete;\r\n  };\r\n  return <div className='svgIcon'>{Svg(type)}</div>;\r\n};\r\n\r\nexport default GetSvg;\r\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Axios from 'axios';\n\nimport { GetDate } from './Widgets/Date';\nimport GetSVG from './Widgets/GetSvg';\nconst apiURL = {\n  key: 'f2e49eb09ac886ba0837ff27886750ca',\n  base: 'https://api.openweathermap.org/data/2.5',\n};\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [data, setdata] = useState({});\n  const [weather, setWeather] = useState({});\n  const [wind, setwind] = useState({});\n  const [coordinate, setCoordinate] = useState({});\n  const [name, setName] = useState('');\n\n  const search = (evt) => {\n    if (evt.key === 'Enter') {\n      if (query === '') {\n        alert('Enter Your City Name \\n Example: Paris');\n      } else {\n        Axios.get(\n          `${apiURL.base}/weather?q=${query}&units=metric&APPID=${apiURL.key}`\n        )\n          .then((response) => {\n            setdata(response.data);\n            setwind(response.data.wind);\n            setCoordinate(response.data.coord);\n            setWeather(response.data.weather[0]);\n            setName(response.data.name);\n            setQuery('');\n          })\n          .catch((err) => {\n            alert(\n              `Check your city name Properly \\n ${query} is not found in our API`\n            );\n            setQuery('');\n          });\n      }\n    }\n  };\n\n  const onInputChange = (e) => {\n    let input = e.target.value;\n    setQuery(input);\n  };\n  return (\n    <div className='app bg'>\n      <main>\n        <h1>Today's Weather Update</h1>\n        <div className='date'>\n          <GetDate />\n        </div>\n        <div className='search-box'>\n          <input\n            type='text'\n            placeholder='Enter Your City Name'\n            className='search-bar'\n            onChange={(e) => onInputChange(e)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {JSON.stringify(data) !== '{}' ? (\n          <div className='data_box'>\n            <div className='location-box'>\n              <div className='location'>\n                {name},{data.sys.country}\n              </div>\n            </div>\n            <div className='coordinates'>\n              <span>\n                <strong>Longitude</strong> : {coordinate.lon}\n              </span>\n              <span>\n                <strong>Latitude</strong> : {coordinate.lat}\n              </span>\n            </div>\n            <div className='weather-box'>\n              <div className='indicator-Icon'>\n                <GetSVG type={weather.main} />\n              </div>\n              <div className='temp'>\n                <h1>{Math.round(data.main.temp)}</h1>\n                <span>Â° C</span>\n              </div>\n              <div className='weather'>\n                <strong>{weather.description}</strong>\n              </div>\n              <div className='small_Panel'>\n                <div className='wind'>\n                  <div className='indicator-Icon'>\n                    <GetSVG type='Wind' />\n                  </div>\n                  <span>\n                    Wind : <strong>{wind.speed}</strong>\n                  </span>\n                </div>\n                <div className='humidity'>\n                  <div className='indicator-Icon'>\n                    <GetSVG type='Humidity' />\n                  </div>\n                  <span>\n                    Humidity : <strong>{data.main.humidity}</strong>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <h3>Wanted to Find out Your City's Weather then Search for it</h3>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/wi-day-sunny.4b9869a6.svg\";"],"sourceRoot":""}